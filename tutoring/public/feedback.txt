04-03
안녕하세요, 수빈님. 5주차 과제 피드백 드립니다. 피드백을 보시고 제출주신 과제를 수정해보시기 바랍니다.

1. CardDataList 컴포넌트
 - 저번에 말씀드린 바와 같이, CardDataList 컴포넌트가 그저 Data를 map 하는 용도로만 사용되고 있습니다. 이렇게 특별한 기능이 없는 List 컴포넌트를 만들게 되면, 필요 없는 props drilling만 늘어나게 됩니다.
 - 비구조화 할당을 활용하여 컴포넌트를 구성하면 조금 더 깔끔하게 props를 할당할 수 있겠습니다.
 - 튜터링에서 말씀드린 바와 같이 key에 id 자체를 할당하는 것보다 `card_item_${cardData.id}`와 같이 할당하는 것이 적절하겠습니다. key naming이 겹치는 것은 React 프로젝트의 렌더링 최적화 측면에서 치명적이기 때문에 대부분의 경우에는 숫자만 할당하지 않습니다.

2. naming convention
 - userNum과 같이 줄임말을 사용하고 있습니다. 합의되지 않은 상태에서는 줄임말을 사용하지 않는 것이 적절하겠습니다. 따라서, userNumber로 변경하시는게 적절하겠습니다.
 - buttonClass는 해당 button의 style을 지정한다는 느낌이 드는 naming이 아닌 것 같습니다. 따라서 튜터링 시간에 안내드린대로 buttonStyle이나 buttonType 정도로 명명하시는 것이 보다 적절하겠습니다. dom의 class를 객체의 값으로 할당하고 있는 것 같은데, 이러한 패턴은 직관적으로 해당 dom에 어떤 class가 할당되었는지 바로 알 수 없기 때문에 안티패턴입니다.

3. css 파일
 - css 파일이 App.js에서만 import 된 상태입니다. 지금은 css를 pure하게 사용하기 때문에 별 탈 없이 지정되지만, 나중에 scss나 module.css, css in js을 사용하게 된다면 페이지에서 import 한 하나의 css파일로 모든 class를 할당하는 것은 불가능합니다. 
 - 또한, 의존성 관리가 명확하게 되지 않기 때문에 해당 컴포넌트 파일 외에 사용되는 css를 import 하는 것은 안티패턴입니다. 따라서, 컴포넌트를 나누신다면, 각 컴포넌트에 해당되는 css style만 각 컴포넌트에서 import 해오는 것이 적절하겠습니다.

4. 추가적으로 리펙토링 가능한 부분들 고려
 - card-content-el를 할당한 dom이 반복되어 사용되고 있습니다. 이러한 부분들이 몇개 보이는데, 반복문으로 조금 더 깔끔하게 처리 가능해보입니다.
 - nested function 고려해서 소스 코드를 조금 더 깔끔하게 만들 수 있습니다. onClick안에 화살표 익명 함수를 만들어서 할당하시는 것으로 보이는데, handleUserNumIncrease = (plan) => () => ... 애초부터 위의 방식으로 선언하신다면 onClick={handleUserNumIncrease("free")} 처럼 깔끔하게 처리 가능합니다.
 - 시간이 남으신다면 중첩이 되는 css style은 ">" 연산자로 규격화하는 것도 좋을 것 같습니다.
 - dangerouslySetInnerHTML을 사용하는 이유를 모르겠습니다. 이는 대체로 안티패턴입니다.
 - containers를 나누는 기준이 불분명한 것 같습니다. 해당 페이지는 원 페이지이기 때문에 folder structure를 이렇게 구성하셔도 별 문제가 없어 보일 수 있지만, 대체로 프로젝트를 진행하면 여러 개의 페이지로 구성하기 때문에 이러한 folder structure는 페이지가 늘어남에 따라 하나의 폴더에 여러 component를 넣어야하기 때문에 적절하지 않을 수 있습니다. 또한, Section을 기준으로 컴포넌트를 나누고 싶으시다면 파일 naming 뒤에 AppHeaderSection 와 같이 Section을 붙히는 것이 적절하겠습니다.
